# serverless.yml
tenant: YOUR NAME
custom:
  radolanBucket: YOUR BUCKET NAME
  publicUrl: YOUR BUCKETS PUBLIC URL
app: YOUR SERVICE NAME
service: YOUR SERVICE NAME
plugins:
  - serverless-plugin-typescript
  - serverless-export-env
  - serverless-offline
package:
  exclude:
    - .env
    - __.*
provider:
  name: aws
  runtime: nodejs10.x
  stage: ${opt:stage, "dev"}
  region: eu-central-1
  profile: flusshygiene
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/AmazonS3FullAccess
    # - arn:aws:iam::aws:policy/AWSDeepRacerCloudFormationAccessPolicy
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        # - "s3:*"
        - "iam:GetRole"
        - "s3:GetObject"
        - "s3:GetObjectAcl"
        - "s3:GetObjectVersion"
        - "s3:GetBucketVersioning"
        - "s3:GetObjectTagging"
        - "s3:GetObjectVersionTagging"
        - "s3:ListBucket"
        - "s3:ListBucketVersions"
        - "s3:ListMultipartUploadParts"
      Resource: "arn:aws:s3:::${self:custom.radolanBucket}/*"
functions:
  radolan:
    handler: handler.radolan
    environment:
      RADOLAN_DATA_BUCKET:  ${self:custom.radolanBucket}
      RADOLAN_DATA_BUCKET_PUBLIC_URL: ${self:custom.publicUrl}
    events:
      - http:
          path: /
          method: get