// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots CardTile default 1`] = `
<div
  className="card card__profile--pad"
>
  <div
    className="card-image"
  >
    <figure
      className="image is-16by9"
    >
      <img
        alt=""
        src="http://placekitten.com/1080/540"
      />
    </figure>
  </div>
  <div
    className="card-content"
  >
    <div
      className="media"
    >
      <div
        className="media-content"
      >
        <p
          className="title is-6"
        >
          Sweetwater
           
          <span
            className="asteriks"
          >
             * 
          </span>
        </p>
      </div>
    </div>
    <div
      className="content"
    >
      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus nec iaculis mauris.
      <br />
    </div>
  </div>
  <footer
    className="card-footer"
  >
    <a
      className="card-footer-item"
      href="/badestellen/1"
      onClick={[Function]}
    >
      Detail
    </a>
  </footer>
</div>
`;

exports[`Storyshots SpotEditor default 1`] = `
Array [
  <div
    className="modal "
  >
    <div
      className="modal-background"
      onClick={[Function]}
    />
    <div
      className="modal-content"
    >
      <div
        className="box"
      >
        <div
          className="content"
        >
          <h1>
            Informationen zum Anlegen von Badestellen
          </h1>
          <p>
            Liebe Nutzer*innen, dieses Tool soll die Nutzer*innen dabei unterstützen, vorhersagebasierte Einschätzungen der Badegewässerqualität vorzunehmen, soweit sich diese mit frei verfügbaren oder vom Nutzer bereitgestellten Datensätzen vorhersagen lässt. Wichtig ist, dass es sich bei diesen Datensätzen um solche handelt, die kontinuierlich gemessen werden und automatisch abfragbar sind. Die Daten der wichtigsten Vorhersagevariable, des Regens, kann das aufgebaute Tool selbstständig über das Angebot des Deutschen Wetterdienstes beziehen. Hier ist kein User-Input notwendig.
          </p>
          <p>
            Anzumerken ist, dass es sich bei diesem Tool um ein Expertentool handelt. Es wird davon ausgegangen, dass grundsätzliche Kenntnisse und Begrifflichkeiten der Badegewässerbewirtschaftung und zu potentiellen Belastungsquellen vorausgesetzt werden. Unterstützt werden vor allem der Aufbau, die Bewertung und die Nutzung statistischer Modelle zur Vorhersage der Badegewässerqualität. Dennoch wird versucht die Nutzung so einfach wie möglich zu gestalten.
          </p>
          <p>
            Das Minimum an Information, das
             
            <span
              style={
                Object {
                  "textDecoration": "underline",
                }
              }
            >
              von den Nutzer*innen
               
            </span>
            bereitgestellt werden muss, ist:
          </p>
          <ol>
            <li>
              Der Name und Ort der Badestelle (als Längen und Breitengrad, Koordinatensystem WGS84)
            </li>
            <li>
              Datum und Messwerte der Badegewässerüberwachung (optional kann zusätzlich der Zeitpunkt der Probennahme angegeben werden)
            </li>
            <li>
              Die Definition einer Niederschlagsfläche, von der davon ausgegangen wird, dass der gefallene Regen die Badegewässerqualität negativ beeinflussen kann.
            </li>
          </ol>
          <p>
            Darüber hinaus werden Basisinformationen zu Charakteristiken, des Einzugsgebiets abgefragt. Falls diese Informationen nicht vorliegen können diese Information mit „unbekannt“ angegeben werden.
          </p>
          <h2>
            Dateineingabe
          </h2>
          <p>
            Die Dateneingabe muss über eine csv.-Datei erfolgen, dass wiederum einem bestimmten Format genügen muss, um von der Plattform eingelesen werden zu können. Innerhalb der Plattform werden die folgenden Trennzeichen verwendet:
          </p>
          <table
            className="table"
          >
            <tbody>
              <tr>
                <td>
                  Art des Trennzeichens
                </td>
                <td>
                  Zeichen 
                </td>
              </tr>
              <tr>
                <td>
                  Dezimaltrennzeichen 
                </td>
                <td>
                  Punkt 
                </td>
              </tr>
              <tr>
                <td>
                  Spaltentrennzeichen
                </td>
                <td>
                  Komma
                </td>
              </tr>
            </tbody>
          </table>
          <p>
            Alle Spaltennamen und Werte müssen ohne Anführungszeichen angegeben werden. Die Datentabelle muss des Weiteren die folgenden Spalten enthalten:
          </p>
          <table
            className="table"
          >
            <thead>
              <tr>
                <th>
                  Spaltenname
                </th>
                <th>
                  Information
                </th>
                <th>
                  Format
                </th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>
                  date
                </td>
                <td>
                  Datum der Probenname 
                </td>
                <td>
                  YYYY-MM-DD HH:MM:SS (Beispiel: 2016-04-15 13:15:13 = 15. April 2006 um 13 Uhr 15 und 15 Sekunden)
                </td>
              </tr>
              <tr>
                <td>
                  conc_ec
                </td>
                <td>
                  Messwert von E.coli [MPN/100mL]
                </td>
                <td>
                  Ganze Zahlen, keine Dezimalstellen
                </td>
              </tr>
              <tr>
                <td>
                  conc_ie
                </td>
                <td>
                  Messwert von intestinalen Enterokokken[MPN/100mL]
                </td>
                <td>
                  Ganze Zahlen, keine Dezimalstellen
                </td>
              </tr>
            </tbody>
          </table>
          <h2>
            Definition der Niederschlagsfläche
          </h2>
          <p>
            Unter einer „relevanten Niederschlagsfläche“ wird die Grundfläche verstanden, über der der Regen eine bestimmte Badestelle beeinflusst. Dies bedeutet, dass Niederschläge, die über dieser Fläche fallen zu Einleitungen von hygienischen Belastungen führen, die letztendlich, das Badegewässer beeinflussen. Aufgrund der vielfältigen, verschiedenen Standortbedingungen ist es nicht möglich eine allgemeingültige Schätzung der für ein Badegewässer relevanten Regenfläche zu definieren. Von daher ist ortsspezifisches Wissen über den Standort des Badegewässers notwendig. Über eine interaktive Karte kann die relevante Regenfläche definiert werden. Es ist zu erwähnen, dass das Raster des Regenradars eine Auflösung von 1km x 1km hat. Diese Auflösung ist zwar bereits sehr hoch, jedoch können teilweise zu detaillierte Kurvenverläufe unter Umständen nicht perfekt abgebildet werden.
          </p>
          <p>
            Anbei einige Faktoren, die bei der Auswahl der Fläche bedacht werden sollten:
          </p>
          <ol>
            <li>
              An Flüssen sollte die Fließrichtung bedacht werden, da nur Einleitungen im Oberlauf die Badestelle beeinträchtigen.
            </li>
            <li>
              An Flüssen können auch Einleitungen die kilometerweit im Oberlauf der Badestelle liegen, die Badegewässerqualität negativ beeinflussen.
            </li>
            <li>
              Urbane Gebiete sollten als Ganzes mit einbezogen werden, da Niederschläge dort zu Einleitungen aus der Misch - und Trennkanalisation führen können.
            </li>
            <li>
              Informationen über das Relief können wichtig sein, für die Beeinflussung des Niederschlags zu bewerten.
            </li>
            <li>
              Einleitungen sind nicht nur aus urbanen sondern auch aus landwirtschaftlichen Flächen zu erwarten.
            </li>
          </ol>
          <p>
            Mit einem 
            <strong>
              *
            </strong>
             gekennzeichnete Felder sind Pflichtfelder
          </p>
        </div>
      </div>
      <button
        aria-label="close"
        className="modal-close is-large"
        onClick={[Function]}
      />
    </div>
  </div>,
  <form
    onReset={[Function]}
    onSubmit={[Function]}
  >
    <div
      className="buttons"
    >
      <button
        className="button is-primary is-small"
        disabled={false}
        type="submit"
      >
        <span>
          Speichern
        </span>
         
        <span
          className="icon is-small"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-save fa-w-14 "
            data-icon="save"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 448 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM224 416c-35.346 0-64-28.654-64-64 0-35.346 28.654-64 64-64s64 28.654 64 64c0 35.346-28.654 64-64 64zm96-304.52V212c0 6.627-5.373 12-12 12H76c-6.627 0-12-5.373-12-12V108c0-6.627 5.373-12 12-12h228.52c3.183 0 6.235 1.264 8.485 3.515l3.48 3.48A11.996 11.996 0 0 1 320 111.48z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </span>
      </button>
      <button
        className="button is-light is-small"
        data-testid="handle-edit-mode-button"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        <span>
          Abbrechen
        </span>
         
        <span
          className="icon is-small"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-window-close fa-w-16 "
            data-icon="window-close"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 512 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M464 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h416c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48zm-83.6 290.5c4.8 4.8 4.8 12.6 0 17.4l-40.5 40.5c-4.8 4.8-12.6 4.8-17.4 0L256 313.3l-66.5 67.1c-4.8 4.8-12.6 4.8-17.4 0l-40.5-40.5c-4.8-4.8-4.8-12.6 0-17.4l67.1-66.5-67.1-66.5c-4.8-4.8-4.8-12.6 0-17.4l40.5-40.5c4.8-4.8 12.6-4.8 17.4 0l66.5 67.1 66.5-67.1c4.8-4.8 12.6-4.8 17.4 0l40.5 40.5c4.8 4.8 4.8 12.6 0 17.4L313.3 256l67.1 66.5z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </span>
      </button>
      <button
        className="button is-light is-small"
        data-testid="handle-info-mode-button"
        onClick={[Function]}
        type="button"
      >
        <span>
          Info
        </span>
         
        <span
          className="icon is-small"
        >
          <svg
            aria-hidden="true"
            className="svg-inline--fa fa-info fa-w-6 "
            data-icon="info"
            data-prefix="fas"
            focusable="false"
            role="img"
            style={Object {}}
            viewBox="0 0 192 512"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"
              fill="currentColor"
              style={Object {}}
            />
          </svg>
        </span>
      </button>
    </div>
    <div
      className="box"
    >
      <fieldset>
        <legend
          className="title is-5"
        >
          Basis Daten*
        </legend>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="name"
            >
              Name
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-name"
                  id="name"
                  name="name"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                  value="foo"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="cyanoPossible"
                >
                  <input
                    id="cyanoPossible"
                    name="cyanoPossible"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Cyanobakterien möglich
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
      </fieldset>
    </div>
    <div
      className="box"
    >
      <fieldset>
        <legend
          className="title is-5"
        >
          Geo Daten *
        </legend>
        <div
          className="buttons"
        >
          <div
            className="dropdown  is-small"
          >
            <div
              aria-controls="dropdown-menu"
              aria-haspopup="true"
              className="dropdown-trigger"
            >
              <button
                aria-controls="dropdown-menu"
                aria-haspopup="true"
                className="button is-small"
                onClick={[Function]}
              >
                <span
                  style={
                    Object {
                      "paddingRight": "0.5em",
                    }
                  }
                >
                  Bearbeitungs Modus:  Anzeige
                </span>
                <span>
                  <svg
                    aria-hidden="true"
                    className="svg-inline--fa fa-angle-down fa-w-10 "
                    data-icon="angle-down"
                    data-prefix="fas"
                    focusable="false"
                    role="img"
                    style={Object {}}
                    viewBox="0 0 320 512"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z"
                      fill="currentColor"
                      style={Object {}}
                    />
                  </svg>
                </span>
              </button>
            </div>
            <div
              className="dropdown-menu"
              id="dropdown-menu"
              role="menu"
            >
              <div
                className="dropdown-content"
              >
                <a
                  className="dropdown-item is-active"
                  href="#/"
                  id="view"
                  onClick={[Function]}
                >
                  anzeigen
                </a>
                <a
                  className="dropdown-item  "
                  href="#/"
                  id="modify"
                  onClick={[Function]}
                >
                  modifizieren
                </a>
                <a
                  className="dropdown-item  "
                  href="#/"
                  id="translate"
                  onClick={[Function]}
                >
                  bewegen
                </a>
                <a
                  className="dropdown-item "
                  href="#/"
                  id="drawPoint"
                  onClick={[Function]}
                >
                  Punkt zeichnen
                </a>
                <a
                  className="dropdown-item "
                  href="#/"
                  id="drawPolygon"
                  onClick={[Function]}
                >
                  Polygon zeichnen
                </a>
              </div>
            </div>
          </div>
        </div>
        <div
          id="map__container"
        >
          <div
            id="deckgl-wrapper"
          >
            <canvas
              id="deckgl-overlay"
              style={
                Object {
                  "left": 0,
                  "position": "absolute",
                  "top": 0,
                }
              }
            />
          </div>
        </div>
      </fieldset>
    </div>
    <div
      className="box"
    >
      <fieldset>
        <legend
          className="title is-5"
        >
          Messwerte
        </legend>
        <div
          className="buttons"
        >
          <button
            className="button is-small is-badge-small  "
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            <span
              className="icon is-small"
            >
              <svg
                aria-hidden="true"
                className="svg-inline--fa fa-info fa-w-6 "
                data-icon="info"
                data-prefix="fas"
                focusable="false"
                role="img"
                style={Object {}}
                viewBox="0 0 192 512"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M20 424.229h20V279.771H20c-11.046 0-20-8.954-20-20V212c0-11.046 8.954-20 20-20h112c11.046 0 20 8.954 20 20v212.229h20c11.046 0 20 8.954 20 20V492c0 11.046-8.954 20-20 20H20c-11.046 0-20-8.954-20-20v-47.771c0-11.046 8.954-20 20-20zM96 0C56.235 0 24 32.235 24 72s32.235 72 72 72 72-32.235 72-72S135.764 0 96 0z"
                  fill="currentColor"
                  style={Object {}}
                />
              </svg>
            </span>
            <span>
              Mehr erfahren
            </span>
          </button>
        </div>
        <div
          className="content"
        >
          <p>
            Die Dateneingabe muss über eine CSV.-Datei (Comma Seperated Value) erfolgen, dass wiederum einem bestimmten Format genügen muss, um von der Plattform eingelesen werden zu können.
          </p>
        </div>
        <div
          className="file"
        >
          <label
            className="file-label"
          >
            <input
              className="file-input"
              disabled={false}
              name="csvFile"
              onChange={[Function]}
              type="file"
            />
            <span
              className="file-cta"
            >
              <span
                className="file-icon"
              >
                <svg
                  aria-hidden="true"
                  className="svg-inline--fa fa-file-csv fa-w-12 "
                  data-icon="file-csv"
                  data-prefix="fas"
                  focusable="false"
                  role="img"
                  style={Object {}}
                  viewBox="0 0 384 512"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M224 136V0H24C10.7 0 0 10.7 0 24v464c0 13.3 10.7 24 24 24h336c13.3 0 24-10.7 24-24V160H248c-13.2 0-24-10.8-24-24zm-96 144c0 4.42-3.58 8-8 8h-8c-8.84 0-16 7.16-16 16v32c0 8.84 7.16 16 16 16h8c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-8c-26.51 0-48-21.49-48-48v-32c0-26.51 21.49-48 48-48h8c4.42 0 8 3.58 8 8v16zm44.27 104H160c-4.42 0-8-3.58-8-8v-16c0-4.42 3.58-8 8-8h12.27c5.95 0 10.41-3.5 10.41-6.62 0-1.3-.75-2.66-2.12-3.84l-21.89-18.77c-8.47-7.22-13.33-17.48-13.33-28.14 0-21.3 19.02-38.62 42.41-38.62H200c4.42 0 8 3.58 8 8v16c0 4.42-3.58 8-8 8h-12.27c-5.95 0-10.41 3.5-10.41 6.62 0 1.3.75 2.66 2.12 3.84l21.89 18.77c8.47 7.22 13.33 17.48 13.33 28.14.01 21.29-19 38.62-42.39 38.62zM256 264v20.8c0 20.27 5.7 40.17 16 56.88 10.3-16.7 16-36.61 16-56.88V264c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8v20.8c0 35.48-12.88 68.89-36.28 94.09-3.02 3.25-7.27 5.11-11.72 5.11s-8.7-1.86-11.72-5.11c-23.4-25.2-36.28-58.61-36.28-94.09V264c0-4.42 3.58-8 8-8h16c4.42 0 8 3.58 8 8zm121-159L279.1 7c-4.5-4.5-10.6-7-17-7H256v128h128v-6.1c0-6.3-2.5-12.4-7-16.9z"
                    fill="currentColor"
                    style={Object {}}
                  />
                </svg>
              </span>
              <span
                className="file-label"
              >
                Datei auswählen…
              </span>
            </span>
          </label>
        </div>
      </fieldset>
    </div>
    <div
      className="box"
    >
      <fieldset>
        <legend
          className="title is-5"
        >
          Hygienische Beeinträchtigung durch:
        </legend>
        <div
          className="field"
        >
          <label
            className="label"
            htmlFor="influencePurificationPlant"
          >
            kommunale Klärwerke
          </label>
          <div
            className="control"
          >
            <div
              className="select"
            >
              <select
                id="influencePurificationPlant"
                name="influencePurificationPlant"
                onBlur={[Function]}
                onChange={[Function]}
              >
                <option
                  value="yes"
                >
                  Ja
                </option>
                <option
                  value="unknown"
                >
                  Unbekannt
                </option>
                <option
                  value="no"
                >
                  Nein
                </option>
              </select>
            </div>
          </div>
        </div>
        <div
          className="field"
        >
          <label
            className="label"
            htmlFor="influenceCombinedSewerSystem"
          >
            Mischwassereinleitungen aus urbanen Gebieten
          </label>
          <div
            className="control"
          >
            <div
              className="select"
            >
              <select
                id="influenceCombinedSewerSystem"
                name="influenceCombinedSewerSystem"
                onBlur={[Function]}
                onChange={[Function]}
              >
                <option
                  value="yes"
                >
                  Ja
                </option>
                <option
                  value="unknown"
                >
                  Unbekannt
                </option>
                <option
                  value="no"
                >
                  Nein
                </option>
              </select>
            </div>
          </div>
        </div>
        <div
          className="field"
        >
          <label
            className="label"
            htmlFor="influenceRainwater"
          >
            Regenwassereileitung aus urbanen Gebieten
          </label>
          <div
            className="control"
          >
            <div
              className="select"
            >
              <select
                id="influenceRainwater"
                name="influenceRainwater"
                onBlur={[Function]}
                onChange={[Function]}
              >
                <option
                  value="yes"
                >
                  Ja
                </option>
                <option
                  value="unknown"
                >
                  Unbekannt
                </option>
                <option
                  value="no"
                >
                  Nein
                </option>
              </select>
            </div>
          </div>
        </div>
        <div
          className="field"
        >
          <label
            className="label"
            htmlFor="influenceAgriculture"
          >
            Einleitungen aus der Landwirtschaft
          </label>
          <div
            className="control"
          >
            <div
              className="select"
            >
              <select
                id="influenceAgriculture"
                name="influenceAgriculture"
                onBlur={[Function]}
                onChange={[Function]}
              >
                <option
                  value="yes"
                >
                  Ja
                </option>
                <option
                  value="unknown"
                >
                  Unbekannt
                </option>
                <option
                  value="no"
                >
                  Nein
                </option>
              </select>
            </div>
          </div>
        </div>
      </fieldset>
    </div>
    <div
      className="box"
    >
      <fieldset>
        <legend
          className="title is-5"
        >
          Zusatz Daten
        </legend>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="isPublic"
                >
                  <input
                    checked={true}
                    id="isPublic"
                    name="isPublic"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                    value={true}
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Öffentlich einsehbar
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="nameLong"
            >
              Langer Name
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-nameLong"
                  id="nameLong"
                  name="nameLong"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="water"
            >
              Gewässer
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-water"
                  id="water"
                  name="water"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="district"
            >
              Distrikt
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-district"
                  id="district"
                  name="district"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="street"
            >
              Straße
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-street"
                  id="street"
                  name="street"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="postalCode"
            >
              Postleitzahl
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-postalCode"
                  id="postalCode"
                  name="postalCode"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="number"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="city"
            >
              Stadt
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-city"
                  id="city"
                  name="city"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="website"
            >
              Website URL
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-website"
                  id="website"
                  name="website"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="lastClassification"
            >
              Letzte Klassifizierung
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-lastClassification"
                  id="lastClassification"
                  name="lastClassification"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="image"
            >
              Bild URL
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-image"
                  id="image"
                  name="image"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="elevation"
            >
              Höhe über NN
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-elevation"
                  id="elevation"
                  name="elevation"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="number"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="apiEndpoints"
            >
              API Endpoints
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-apiEndpoints"
                  id="apiEndpoints"
                  name="apiEndpoints"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="waterRescue"
            >
              Wasserrettung
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-waterRescue"
                  id="waterRescue"
                  name="waterRescue"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="waterRescueThroughDLRGorASB"
                >
                  <input
                    id="waterRescueThroughDLRGorASB"
                    name="waterRescueThroughDLRGorASB"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Wasserrettung durch DLRG oder ASB?
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="lifeguard"
                >
                  <input
                    id="lifeguard"
                    name="lifeguard"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Rettungschwimmer vor Ort
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="disabilityAccess"
                >
                  <input
                    id="disabilityAccess"
                    name="disabilityAccess"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Barrierefreie
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="disabilityAccessBathrooms"
                >
                  <input
                    id="disabilityAccessBathrooms"
                    name="disabilityAccessBathrooms"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Barrierefreie Waschräume
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="hasDisabilityAccesableEntrence"
                >
                  <input
                    id="hasDisabilityAccesableEntrence"
                    name="hasDisabilityAccesableEntrence"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Barrierefreier Eingang
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="restaurant"
                >
                  <input
                    id="restaurant"
                    name="restaurant"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Restaurant
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="snack"
                >
                  <input
                    id="snack"
                    name="snack"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Snack
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="parkingSpots"
                >
                  <input
                    id="parkingSpots"
                    name="parkingSpots"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Parkplätze
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="bathrooms"
                >
                  <input
                    id="bathrooms"
                    name="bathrooms"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Waschräume
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="bathroomsMobile"
                >
                  <input
                    id="bathroomsMobile"
                    name="bathroomsMobile"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Mobile Toiletten
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <div
              className="label"
            />
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <label
                  className="checkbox"
                  htmlFor="dogban"
                >
                  <input
                    id="dogban"
                    name="dogban"
                    onBlur={[Function]}
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <span
                    className="form__checkbox--distance"
                  >
                    Hundeverbot
                  </span>
                </label>
              </div>
            </div>
          </div>
        </div>
      </fieldset>
    </div>
    <div
      className="box"
    >
      <fieldset>
        <legend
          className="title is-5"
        >
          Zuständiges Gesundheitsamt
        </legend>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="healthDepartment"
            >
              Name
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-healthDepartment"
                  id="healthDepartment"
                  name="healthDepartment"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="healthDepartmentAddition"
            >
              Zusatz
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-healthDepartmentAddition"
                  id="healthDepartmentAddition"
                  name="healthDepartmentAddition"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="healthDepartmentStreet"
            >
              Straße
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-healthDepartmentStreet"
                  id="healthDepartmentStreet"
                  name="healthDepartmentStreet"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="healthDepartmentPostalCode"
            >
              Postleitzahl
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-healthDepartmentPostalCode"
                  id="healthDepartmentPostalCode"
                  name="healthDepartmentPostalCode"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="number"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="healthDepartmentCity"
            >
              Stadt
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-healthDepartmentCity"
                  id="healthDepartmentCity"
                  name="healthDepartmentCity"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="healthDepartmentMail"
            >
              E-Mail
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-healthDepartmentMail"
                  id="healthDepartmentMail"
                  name="healthDepartmentMail"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="email"
                />
              </div>
            </div>
          </div>
        </div>
        <div
          className="field is-horizontal"
        >
          <div
            className="field-label is-normal"
          >
            <label
              className="label"
              htmlFor="healthDepartmentPhone"
            >
              Telefonnummer
            </label>
          </div>
          <div
            className="field-body"
          >
            <div
              className="field"
            >
              <div
                className="control"
              >
                <input
                  className="input"
                  data-testid="test-input-healthDepartmentPhone"
                  id="healthDepartmentPhone"
                  name="healthDepartmentPhone"
                  onBlur={[Function]}
                  onChange={[Function]}
                  type="text"
                />
              </div>
            </div>
          </div>
        </div>
      </fieldset>
    </div>
    <div
      className="field is-grouped is-grouped-left"
    >
      <p
        className="control"
      >
        <button
          className="button is-primary"
          disabled={false}
          type="submit"
        >
          Speichern
        </button>
      </p>
      <p
        className="control"
      >
        <button
          className="button is-light"
          data-testid="handle-edit-mode-button"
          disabled={false}
          onClick={[Function]}
          type="button"
        >
          Abbrechen
        </button>
      </p>
    </div>
  </form>,
]
`;

exports[`Storyshots SpotEditor/Checkbox default 1`] = `
<div>
  <div
    className="field is-horizontal"
  >
    <div
      className="field-label is-normal"
    >
      <div
        className="label"
      />
    </div>
    <div
      className="field-body"
    >
      <div
        className="field"
      >
        <div
          className="control"
        >
          <label
            className="checkbox"
            htmlFor="name"
          >
            <input
              checked={true}
              id="name"
              name="name"
              onBlur={[Function]}
              onChange={[Function]}
              type="checkbox"
              value="foo"
            />
            <span
              className="form__checkbox--distance"
            >
              The Checkbox
            </span>
          </label>
        </div>
      </div>
    </div>
  </div>
  <div
    className="field is-grouped is-grouped-left"
  >
    <p
      className="control"
    >
      <button
        className="button is-primary"
        disabled={false}
        type="submit"
      >
        Speichern
      </button>
    </p>
    <p
      className="control"
    >
      <button
        className="button is-light"
        data-testid="handle-edit-mode-button"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Abbrechen
      </button>
    </p>
  </div>
</div>
`;

exports[`Storyshots SpotEditor/Input text 1`] = `
<div>
  <div
    className="field is-horizontal"
  >
    <div
      className="field-label is-normal"
    >
      <label
        className="label"
        htmlFor="name"
      >
        The Input
      </label>
    </div>
    <div
      className="field-body"
    >
      <div
        className="field"
      >
        <div
          className="control"
        >
          <input
            className="input"
            data-testid="test-input-name"
            id="name"
            name="name"
            onBlur={[Function]}
            onChange={[Function]}
            type="text"
            value="foo"
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="field is-grouped is-grouped-left"
  >
    <p
      className="control"
    >
      <button
        className="button is-primary"
        disabled={false}
        type="submit"
      >
        Speichern
      </button>
    </p>
    <p
      className="control"
    >
      <button
        className="button is-light"
        data-testid="handle-edit-mode-button"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Abbrechen
      </button>
    </p>
  </div>
</div>
`;

exports[`Storyshots SpotEditor/Select default 1`] = `
<div>
  <div
    className="field"
  >
    <label
      className="label"
      htmlFor="name"
    >
      The Checkbox
    </label>
    <div
      className="control"
    >
      <div
        className="select"
      >
        <select
          id="name"
          name="name"
          onBlur={[Function]}
          onChange={[Function]}
          value="yes"
        >
          <option
            value="yes"
          >
            YES
          </option>
          <option
            value="no"
          >
            NO
          </option>
        </select>
      </div>
    </div>
  </div>
  <div
    className="field is-grouped is-grouped-left"
  >
    <p
      className="control"
    >
      <button
        className="button is-primary"
        disabled={false}
        type="submit"
      >
        Speichern
      </button>
    </p>
    <p
      className="control"
    >
      <button
        className="button is-light"
        data-testid="handle-edit-mode-button"
        disabled={false}
        onClick={[Function]}
        type="button"
      >
        Abbrechen
      </button>
    </p>
  </div>
</div>
`;
