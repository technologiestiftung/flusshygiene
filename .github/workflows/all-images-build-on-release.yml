name: Docker Image Builder

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  # GITHUB_PAT:  ${{secrets.GITHUB_PAT_KWB}}
  STAGE: dev
  # COMMIT_FILTER: "[skip-ci]"

on:
  release:
    types: [published]
jobs:

  nginx:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      # - name: Skip based on commit message
      #   uses: veggiemonk/skip-commit@1.0.0
      - name: Get the source
        uses: actions/checkout@v1
      - name: Docker login, build and push
        # uses: actions/docker/login@master
        env:

          SUFFIX: "nginx-gateway"
          CI: "true"
        run:  |
          cd packages/nginx-gateway/
          echo "$DOCKER_PASSWORD" |  docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build --label version=${GITHUB_REF##*/} --build-arg OCPU_USER=${{secrets.OCPU_USER}} --build-arg OCPU_PW=${{secrets.OCPU_PW}} --tag "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}" .
          docker push "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}"

  cronbot:
    runs-on: ubuntu-latest
    steps:
      - name: Get the source
        uses: actions/checkout@v1
      - name: Docker login, build and push
        env:
          SUFFIX: "cronbot"
          CI: "true"
        run:  |
          cd packages/cronbot/
          echo "$DOCKER_PASSWORD" |  docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build --label version=${GITHUB_REF##*/} --tag ${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE} .
          docker push "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}"
  radolan:
    runs-on: ubuntu-latest
    steps:
      - name: Get the source
        uses: actions/checkout@v1
      - name: Docker login, build and push
        env:
          SUFFIX: "radolan-recent-to-s3"
          CI: "true"
        run:  |
          cd packages/radolan-recent-to-s3/
          echo "$DOCKER_PASSWORD" |  docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build --label version=${GITHUB_REF##*/} --tag ${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE} .
          docker push "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}"
  cms-spa:
    runs-on: ubuntu-latest
    steps:
      # - name: Skip based on commit message
      #   uses: veggiemonk/skip-commit@1.0.0
      - name: Get the source
        uses: actions/checkout@v1
      - name: Docker login, build and push
        # uses: actions/docker/login@master
        env:
          SUFFIX: "cms-spa"
          CI: "true"
        run:  |
          cd packages/cms-spa/
          echo "$DOCKER_PASSWORD" |  docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build --label version=${GITHUB_REF##*/} --build-arg REACT_APP_EVENT_SOURCE_URL=${{secrets.REACT_APP_EVENT_SOURCE_URL}} --build-arg REACT_APP_MAPBOX_API_TOKEN=${{secrets.REACT_APP_MAPBOX_API_TOKEN}} --build-arg REACT_APP_AUTH0_DOMAIN=${{secrets.REACT_APP_AUTH0_DOMAIN}} --build-arg REACT_APP_AUTH0_CLIENTID=${{secrets.REACT_APP_AUTH0_CLIENTID}} --build-arg REACT_APP_AUTH0_AUDIENCE=${{secrets.REACT_APP_AUTH0_AUDIENCE}} --tag ${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE} .
          docker push "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}"


  ocpu-base:
    runs-on: ubuntu-latest
    steps:
      # - name: Skip based on commit message
      #   uses: veggiemonk/skip-commit@1.0.0
      - name: Get the source
        uses: actions/checkout@v1
      - name: Docker login, build and push
        # uses: actions/docker/login@master
        env:
          BUILD_DATE: '2019-09-19'

          SUFFIX: "opencpu-base"
          CI: "true"
        run:  |
          cd packages/opencpu-base/
          echo "$DOCKER_PASSWORD" |  docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build --label version=${GITHUB_REF##*/} --build-arg BUILD_DATE=${BUILD_DATE} --tag "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}" .
          docker push "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}"


  fhpredict:
    runs-on: ubuntu-latest
    needs: ocpu-base
    steps:
      # - name: Skip based on commit message
      #   uses: veggiemonk/skip-commit@1.0.0
      - name: Get the source
        uses: actions/checkout@v1
      - name: Docker login and build and push
        # uses: actions/docker/login@master
        env:

          SUFFIX: "opencpu-fhpredict-api"
          CI: "true"
        run: |
          cd packages/opencpu-fhpredict-api/
          echo "$DOCKER_PASSWORD" |  docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build  --tag "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}" .
          docker push "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}"


  middlelayer:
    runs-on: ubuntu-latest
    steps:
      # - name: Skip based on commit message
      #   uses: veggiemonk/skip-commit@1.0.0
      - name: Get the source
        uses: actions/checkout@v1

      - name: Docker login, build and push
        # uses: actions/docker/login@master
        env:

          SUFFIX: "opencpu-middlelayer"
          CI: "true"
        run:  |
          cd packages/opencpu-middlelayer/
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build --label version=${GITHUB_REF##*/} --tag "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}" .
          docker push "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}"

  postgres-api:
    runs-on: ubuntu-latest
    steps:
      # - name: Skip based on commit message
      #   uses: veggiemonk/skip-commit@1.0.0
      - name: Get the source
        uses: actions/checkout@v1

      - name: Docker login, build and push
        env:

          SUFFIX: "postgres-api"
          CI: "true"
        run: |
          cd packages/postgres-api/
          echo "$DOCKER_PASSWORD" |  docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build --tag "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}" .
          docker push "${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-${STAGE}"
