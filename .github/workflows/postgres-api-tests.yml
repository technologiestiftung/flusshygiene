name: POSTGRES API test and build
env:
  SUFFIX: postgres-api
  STAGE: dev
  AWS_BUCKET_DEV: test
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
  AUTH0_REQ_URL: ${{ secrets.AUTH0_REQ_URL }}
  JWKS_URI: ${{ secrets.JWKS_URI }}
on:
  push:
    paths:
      - '.github/workflows/postgres-api-tests.yml'
      - 'sources/packages/postgres-api/src/*'
      - 'sources/packages/postgres-api/types/*'
      - 'sources/packages/postgres-api/__tests__/*'
      - 'sources/packages/postgres-api/__mocks__/*'
      - 'sources/packages/postgres-api/package*.json'
      - 'sources/packages/postgres-api/ormconfig.js'
      - 'sources/packages/postgres-api/Dockerfile'
      - 'sources/packages/postgres-api/.dockerignore'
      - 'sources/packages/postgres-api/docker-compose.yml'
  pull_request:
    paths:
      - '.github/workflows/postgres-api-tests.yml'
      - 'sources/packages/postgres-api/src/*'
      - 'sources/packages/postgres-api/types/*'
      - 'sources/packages/postgres-api/__tests__/*'
      - 'sources/packages/postgres-api/__mocks__/*'
      - 'sources/packages/postgres-api/package*.json'
      - 'sources/packages/postgres-api/ormconfig.js'
      - 'sources/packages/postgres-api/Dockerfile'
      - 'sources/packages/postgres-api/.dockerignore'
      - 'sources/packages/postgres-api/docker-compose.yml'
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install and test
        run: |
          cd sources/packages/${SUFFIX}
          docker-compose up -d postgres
          npm ci --quiet
          npm test --ci --coverage
          docker-compose down
          npm run build
        env:
          CI: "true"
      - name: Coveralls GitHub Action
        if: github.event_name == 'pull_request'
        uses: coverallsapp/github-action@v1.0.1
        with:
          github-token: ${{ secrets.github_token }}
          parallel: true
          path-to-lcov: sources/packages/${SUFFIX}/coverage/lcov.info
      - name: Coveralls Finished
        if: github.event_name == 'pull_request'
        uses: coverallsapp/github-action@v1.0.1
        with:
          github-token: ${{ secrets.github_token }}
          parallel-finished: true

  image:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout source
        uses: actions/checkout@v1
      - name: image build test
        run: |
          cd sources/packages/${SUFFIX}
          docker build --label version=${GITHUB_REF##*/} --tag ${GITHUB_REPOSITORY}-${SUFFIX}:${GITHUB_REF##*/}-dev .
        env:
          CI: "true"