import nock from "nock";
import { Spot } from "../common/interfaces";

const spot: Spot = {
  spotId: 1,
  spotName: "foo",
  userId: 1,
  email: "foo@bah.com",
  apiEndpoints: {},
};
const CRON_URL = "https://cronbot-sources.now.sh";
const API_URL = "https://www.flusshygiene.xyz";
nock(API_URL)
  .persist()
  .get(`/users/${spot.userId}/bathingspots/${spot.spotId}/genericInputs`)
  .reply(200, {
    data: [{ id: 1, url: `${CRON_URL}?count=10`, name: "foo" }],
  });
jest.mock("../common/env", () => {
  return {
    API_URL: "http://foo.com",
    getApiToken: jest.fn(() => {
      return "Bearer xyz";
    }),
  };
});
jest.mock("../utils/got-util", () => {
  return {
    gotOptionsFactory: jest.fn(() => {
      return { url: `${URL}/users/1/bathingspots` };
    }),
  };
});

describe("{{ name }}", () => {
  test("", async (done) => {
    // const mockConsoleErr = jest.spyOn(console, "error");
    // test here
    // mockConsoleErr.mockRestore();

    done();
  });
});
